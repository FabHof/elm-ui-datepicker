[{"name":"DatePicker","comment":"\n\n\n# Main\n\n@docs view, DatePicker, Msg, Settings, ChangeEvent, defaultSettings, init, initWithToday, setToday, update\n\n\n# Helpers\n\nFor when you want to be more in control\n\n@docs close, open\n\n","unions":[{"name":"ChangeEvent","comment":" ","args":[],"cases":[["DateChanged",["Date.Date"]],["TextChanged",["String.String"]],["DateCleared",[]],["PickerChanged",["DatePicker.Msg"]]]},{"name":"DatePicker","comment":" Has all the internal state of the DatePicker.\n","args":[],"cases":[]},{"name":"Msg","comment":" ","args":[],"cases":[]}],"aliases":[{"name":"Settings","comment":" Settings are the stuff you probably care about, but want to only set once for a given DatePicker.\n","args":[],"type":"{ firstDayOfWeek : Time.Weekday, focusColor : Element.Color }"}],"values":[{"name":"close","comment":" Sets the date picker state to closed\n","type":"DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"defaultSettings","comment":" Reasonable default settings.\n","type":"DatePicker.Settings"},{"name":"init","comment":" ","type":"DatePicker.DatePicker"},{"name":"initWithToday","comment":" ","type":"Date.Date -> DatePicker.DatePicker"},{"name":"open","comment":" Sets the date picker state to open\n","type":"DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setToday","comment":" ","type":"Date.Date -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"update","comment":" ","type":"DatePicker.Msg -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"view","comment":" This view function is a wrapper around `Input.text`. It needs the following things to work:\n\n  - `List (Attribute Msg)` is given directly to `Input.text`.\n  - `Settings Msg` is the stuff you care about, but probably want to set only once.\n  - `DatePicker` is the internal model i.e. the stuff you probably do not care about.\n  - `text` is given directly to `Input.text`. Yes, you have to handle user text input all by yourself.\n  - `selectedDate` is only used to highlight the date when the date picker is open. It's up to you to keep the text and selectedDate in sync.\n\n","type":"List.List (Element.Attribute msg) -> { settings : DatePicker.Settings, label : Element.Input.Label msg, placeholder : Maybe.Maybe (Element.Input.Placeholder msg), datePicker : DatePicker.DatePicker, text : String.String, selectedDate : Maybe.Maybe Date.Date, onChange : DatePicker.ChangeEvent -> msg } -> Element.Element msg"}],"binops":[]}]